apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongodb
  namespace: cs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mongodb
subjects:
  - kind: ServiceAccount
    name: mongodb
    namespace: cs
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: cs
  labels:
    name: mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: cs
spec:
  selector:
    matchLabels:
      role: mongodb
      environment: staging
  serviceName: "mongodb"
  replicas: 3
  template:
    metadata:
      labels:
        role: mongodb
        environment: staging
        replicaset: MainRepSet
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: replicaset
                  operator: In
                  values:
                  - MainRepSet
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      serviceAccountName: mongodb
      containers:
        - name: mongodb
          image: mongo:4.0.21
          command:
            - mongod
            - --wiredTigerCacheSizeGB
            - "0.25"
            - --bind_ip
            - 0.0.0.0
            - --replSet
            - MainRepSet
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /data/db
        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "role=mongodb,environment=staging"
            - name: KUBE_NAMESPACE
              value: "cs"
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: "mongodb"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage
      annotations:
        volume.beta.kubernetes.io/storage-class: "fast"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
      storageClassName: managed-premium
